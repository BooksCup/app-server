<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.app.server.mapper.FabricCheckRecordProblemMapper">

    <delete id="deleteByRecordId">
        delete from t_fabric_check_record_problem where record_id = #{recordId} and problem_position=#{problemPosition}
    </delete>

    <insert id="addFabricQcRecordProblem" parameterType="com.bc.app.server.entity.FabricCheckRecordProblem">
        insert into t_fabric_check_record_problem
        (
        id,
        record_id,
        tag,
        tag_a_times,
        tag_b_times,
        tag_c_times,
        tag_d_times,
        remark,
        image,
        create_time,
        is_delete,
        problem_position
        )
        values
        <foreach collection="list" item="fabricCheckRecordProblem" separator=",">
            (
            #{fabricCheckRecordProblem.id},
            #{fabricCheckRecordProblem.recordId},
            #{fabricCheckRecordProblem.tag},
            #{fabricCheckRecordProblem.tagATimes},
            #{fabricCheckRecordProblem.tagBTimes},
            #{fabricCheckRecordProblem.tagCTimes},
            #{fabricCheckRecordProblem.tagDTimes},
            #{fabricCheckRecordProblem.remark},
            #{fabricCheckRecordProblem.image},
            now(),
            0,
            #{fabricCheckRecordProblem.problemPosition}
            )
        </foreach>

    </insert>

    <select id="getFabricQcRecordProblemByRecordId" resultType="com.bc.app.server.entity.FabricCheckRecordProblem"
            parameterType="com.bc.app.server.entity.FabricCheckRecordProblem">
        select * from t_fabric_check_record_problem
        where
        is_delete=0
        <if test="recordId != null and recordId != ''">
            and record_id = #{recordId}
        </if>
        <if test="tag != null and tag != ''">
            and tag = #{tag}
        </if>
        order by create_time desc
    </select>

    <update id="updateByIds" parameterType="list">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update t_fabric_check_record_problem
            set is_delete = '1'
            where id = #{item.id}
        </foreach>
    </update>

    <update id="updateById" parameterType="com.bc.app.server.entity.FabricCheckRecordProblem">
        update
        t_fabric_check_record_problem
        <trim prefix="SET" suffixOverrides=",">
            <if test='tag != null and tag != "" '>
                tag = #{tag},
            </if>
            <if test='tagATimes != null and tagATimes != "" '>
                tag_a_times = #{tagATimes},
            </if>
            <if test='tagBTimes != null and tagBTimes != "" '>
                tag_b_times = #{tagBTimes},
            </if>
            <if test='tagCTimes != null and tagCTimes != "" '>
                tag_c_times=#{tagCTimes},
            </if>

            <if test='tagDTimes != null and tagDTimes != "" '>
                tag_d_times = #{tagDTimes},
            </if>
            <if test='remark != null and remark != "" '>
                remark = #{remark},
            </if>
        </trim>
        where id = #{id}
    </update>

    <select id="selectById" resultType="com.bc.app.server.entity.FabricCheckRecordProblem">
        select * from t_fabric_check_record_problem
        where
        is_delete=0
        and   id = #{id}
    </select>

    <select id="getCountData" resultType="fabricCheckRecordProblem"
            parameterType="com.bc.app.server.entity.FabricCheckRecordProblem">
     SELECT
	SUM( tag_a_times ) AS tagATimes,
	SUM( tag_b_times ) AS tagBTimes,
	SUM( tag_c_times ) AS tagCTimes,
	SUM( tag_d_times ) AS tagDTimes
    FROM
        `t_fabric_check_record_problem`
    WHERE
        record_id = #{recordId}
    </select>
    <select id="getEntiryGroupByProblemPosition"
            resultType="com.bc.app.server.vo.fabriccheckrecordproblemcontrollervo.FabricCheckRecordProblemVo">
        select
        problem_position as problemPosition
       from t_fabric_check_record_problem
       where is_delete=0 and  record_id=#{recordId}
       group  by problem_position
       order by cast(problemPosition as UNSIGNED)
    </select>
    <select id="getEntiryByRecordRdAndPosition" resultType="com.bc.app.server.entity.FabricCheckRecordProblem">
        select * from t_fabric_check_record_problem
        where
        is_delete=0
        and   record_id = #{recordId} and problem_position=#{problemPosition}

    </select>


    <update id="updateByRecordId" parameterType="com.bc.app.server.entity.FabricCheckRecordProblem">
        update
        t_fabric_check_record_problem
        set is_delete=1
        where record_id = #{recordId}
    </update>

</mapper>