<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.app.server.mapper.UserMapper">

    <resultMap id="user" type="com.bc.app.server.entity.User">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="enterprise_id" property="enterpriseId" jdbcType="VARCHAR"/>
        <result column="enterprise_name" property="enterpriseName" jdbcType="VARCHAR"/>
        <result column="enterprise_address" property="enterpriseAddress" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="im_password" property="imPassword" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="job_name" property="jobName" jdbcType="VARCHAR"/>
        <result column="account_id" property="accountId" jdbcType="VARCHAR"/>
        <result column="account_id_number" property="idNumber" jdbcType="VARCHAR"/>
        <result column="real_name_cert_type" property="realNameCertType" jdbcType="VARCHAR"/>
        <result column="is_super_admin" property="isSuperAdmin" jdbcType="VARCHAR"/>
        <result column="isFabricCheckAdmin" property="isFabricCheckAdmin" jdbcType="VARCHAR"/>
        <result column="short_name" property="enterpriseShortName" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="addUser" parameterType="user">
        insert into t_user
        (
        id,
        enterprise_id,
        name,
        password,
        im_password,
        phone,
        user_status,
        job_no,
        create_time,
        modify_time
        )
        values
        (
        #{id},
        #{enterpriseId},
        #{name},
        #{password},
        #{imPassword},
        #{phone},
        1,
        #{jobNo},
        now(),
        now()
        )
    </insert>

    <insert id="addUserList">
        insert into t_user
        (
        id,
        enterprise_id,
        name,
        password,
        im_password,
        phone,
        user_status,
        job_no,
        create_time,
        modify_time
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.id},
            #{item.enterpriseId},
            #{item.name},
            #{item.password},
            #{item.imPassword},
            #{item.phone},
            1,
            #{item.jobNo},
            now(),
            now()
            )
        </foreach>
    </insert>

    <select id="getUserByPhoneAndPassword" resultMap="user">
        select
        u.*,
        e.name as enterprise_name,
        e.short_name as short_name,
        e.address as enterprise_address,
        account.account_id as account_id,
        account.id_card as account_id_number,
        account.real_type as real_name_cert_type,
        crc.role as isFabricCheckAdmin
        from t_user u
        left join t_enterprise e on u.enterprise_id = e.id
        left join t_user_account account on u.id = account.user_id
        left join t_fabric_check_role_config crc on crc.user_id = u.id and crc.is_delete = '0'
        where u.phone = #{phone}
        and u.password = #{password}
    </select>

    <select id="getUserById" resultMap="user" parameterType="String">
        select
        u.*,
        e.name as enterprise_name,
        e.address as enterprise_address
        from t_user u
        left join t_enterprise e on u.enterprise_id = e.id
        where u.id = #{userId}
    </select>


    <select id="getUserList" resultType="com.bc.app.server.entity.User" parameterType="map">
        select
        u.id,
        u.name,
        u.avatar,
        u.job_name as jobName,
        d.name as departmentName,
        e.name as enterpriseName
        from t_user u
        left join t_department d on d.id = u.department_id and d.delete_status = '0'
        left join t_enterprise e on e.id = u.enterprise_id and e.delete_status = '0'
        where u.job_status BETWEEN 1 AND 4 and u.enterprise_id = #{enterpriseId}
        ORDER BY u.create_time DESC
    </select>

</mapper>