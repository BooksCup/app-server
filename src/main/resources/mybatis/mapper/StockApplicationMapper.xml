<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.app.server.mapper.StockApplicationMapper">


    <resultMap id="stockApplicationInRecordDtMap" type="com.bc.app.server.entity.WareHouse">
        <result column="w_id" property="id"></result>
        <result column="w_name" property="name"></result>
        <result column="contact_name" property="contactName"></result>
        <result column="contact_phone" property="contactPhone"></result>
        <result column="province" property="province"></result>
        <result column="city" property="city"></result>
        <result column="area" property="area"></result>
        <result column="address" property="address"></result>
        <result column="remark" property="remark"></result>
        <collection property="stockApplicationInRecordList" ofType="com.bc.app.server.entity.StockApplicationInRecord">
            <result column="id" property="id"></result>
            <result column="ware_house_id" property="wareHouseId"></result>
            <result column="goods_id" property="goodsId"></result>
            <result column="goods_spec_id" property="goodsSpecId"></result>
            <result column="count" property="count"></result>
            <result column="stock_application_id" property="stockApplicationId"></result>
            <result column="residual_number" property="residualNumber"></result>
            <result column="price" property="price"></result>
            <result column="create_time" property="createTime"></result>
            <result column="biz_type" property="bizType"></result>
            <result column="x" property="x"></result>
            <result column="y" property="y"></result>
            <result column="s_remark" property="remark"></result>

        </collection>
    </resultMap>

    <insert id="insert" parameterType="stockApplication">
        INSERT INTO t_stock_application
        (
        id,stock_goods_id,stock_number,stock_type,biz_type,
        enterprise_id,contact_enterprise_id,receiver_name,receive_address,remark,
        create_user_id,create_time,material_number,po,
        trade_enterprise_id,receiver_id,
        total_amount,
        tax,cost_price,currency,apply_number,
        audit_user_id,copy_user_id,stock_img,order_id,apply_status,modify_time
        )
        VALUES
        (
        #{id},#{stockGoodsId},#{stockNumber},#{stockType},#{bizType},
        #{enterpriseId},#{contactEnterpriseId},#{receiverName},#{receiveAddress},#{remark},
        #{createUserId},now(),#{materialNumber},#{po},
        #{tradeEnterpriseId},#{receiverId},
        #{totalAmount},
        #{tax},#{costPrice},#{currency},#{applyNumber},
        #{auditUserId},#{copyUserId},#{stockImg},#{orderId},#{applyStatus},now()
        )
    </insert>

    <update id="update" parameterType="stockApplication">
        update t_stock_application
        <trim prefix="SET" suffixOverrides=",">
            <if test='stockGoodsId != null and stockGoodsId != "" '>
                stock_goods_id = #{stockGoodsId},
            </if>
            <if test='createUserId != null and createUserId != "" '>
                create_user_id =#{createUserId},
            </if>
            <if test='enterpriseId != null and enterpriseId != "" '>
                enterprise_id = #{enterpriseId},
            </if>
            <if test='contactEnterpriseId != null and contactEnterpriseId != "" '>
                contact_enterprise_id # ={contactEnterpriseId},
            </if>
            <if test='remark != null and remark != "" '>
                remark = #{remark},
            </if>
            <if test='stockImg != null and stockImg != "" '>
                stock_img = #{stockImg},
            </if>
            <if test='auditUserId != null and auditUserId != "" '>
                audit_user_id = #{auditUserId},
            </if>
            <if test='copyUserId != null and copyUserId != "" '>
                copy_user_id = #{copyUserId},
            </if>
            <if test='orderId != null and orderId != "" '>
                order_id = #{orderId},
            </if>
            <if test='bizType != null and bizType != "" '>
                biz_type = #{bizType},
            </if>
            <if test='stockType != null and stockType != "" '>
                stock_type = #{stockType},
            </if>
            <if test='applyStatus != null and applyStatus != "" '>
                apply_status =#{applyStatus},
            </if>
            <if test='status != null and status != "" '>
                status =#{status},
            </if>
            <if test='stockNumber != null and stockNumber != "" '>
                stock_number=#{stockNumber},
            </if>
            modify_time=now()
        </trim>
        where id = #{id}
    </update>
    <update id="updateStockApplicationPackageRecordList">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update t_stock_application_package_record
            <trim prefix="SET" suffixOverrides=",">
                <if test='item.count != null and item.count != "" '>
                    count = #{item.count},
                </if>
                <if test='item.applyNumber != null and item.applyNumber != "" '>
                    apply_number = #{item.applyNumber},
                </if>
                <if test='item.goodsId != null and item.goodsId != "" '>
                    goods_id = #{item.goodsId},
                </if>
                <if test='item.goodsSpecId != null and item.goodsSpecId != "" '>
                    goods_spec_id=#{item.goodsSpecId},
                </if>
                <if test='item.boxId != null and item.boxId != "" '>
                    box_id = #{item.boxId},
                </if>
                <if test='item.sort != null and item.sort != "" '>
                    sort = #{item.sort},
                </if>
            </trim>
            where create_user_id = #{item.createUserId} and stock_application_id = #{item.stockApplicationId} and
            enterprise_id =#{item.enterpriseId}
        </foreach>
    </update>
    <delete id="deleteBatchStockApplicationPackageRecord">
        DELETE FROM  t_stock_application_package_record
        where create_user_id = #{createUserId} and  stock_application_id = #{stockApplicationId} and  enterprise_id =#{enterpriseId}
    </delete>

    <select id="getStockApplicationList" parameterType="map" resultType="stockApplicationVo">
        SELECT
        p.id,
        p.apply_status as applyStatus,
        g.goods_name as goodsName,
        g.goods_photos as goodsPhotos,
        g.goods_no as goodsNo,
        u.name as createUserName,
        ex.name as exchangeEnterpriseName,
        p.biz_type as bizType,
        p.stock_type as stockType,
        p.status as status,
        p.create_time as createTime
        FROM t_stock_application p
        LEFT JOIN t_goods g on g.id = p.stock_goods_id
        LEFT JOIN t_exchange_enterprise ex ON ex.id = p.contact_enterprise_id
        LEFT JOIN t_user u ON p.create_user_id = u.id
        WHERE 1=1
        AND p.enterprise_id = #{enterpriseId}
        AND p.is_delete = '0'
        AND p.stock_type = #{stockType}
        <if test="role != null and role != '' and role == 1">
            AND p.apply_status <![CDATA[ <> ]]> '0'
            AND p.apply_status <![CDATA[ <> ]]> '3'
        </if>
        ORDER BY p.modify_time desc
    </select>

    <select id="findById" parameterType="string" resultType="stockApplicationVo">
        SELECT
        t.id,
        t.stock_goods_id as stockGoodsId,
        t.stock_img as stockImg,
        t.order_id as orderId,
        t.stock_number as stockNumber,
        t.apply_number as applyNumber,
        t.stock_type as stockType,
        t.biz_type as bizType,
        t.contact_enterprise_id as contactEnterpriseId,
        t.remark,
        t.create_user_id as createUserId,
        t.create_time as createTime,
        t.apply_status as applyStatus,
        g.goods_name as goodsName,
        g.goods_photos as goodsPhotos,
        g.goods_no as goodsNo,
        g.goods_unit as goodsUnit,
        ex.name as exchangeEnterpriseName,
        t.audit_user_id as auditUserId,
        au.name as auditUserName,
        t.copy_user_id as copyUserId,
        pu.name as copyUserName,
        g.attr_list as attrList,
        g.x,
        g.y,
        cu.name as createUserName,
        t.audit_time as auditTime
        FROM t_stock_application t
        LEFT JOIN t_exchange_enterprise ex ON ex.id = t.contact_enterprise_id
        LEFT JOIN t_user pu on pu.id = t.copy_user_id
        LEFT JOIN t_user au on au.id = t.audit_user_id
        LEFT JOIN t_user cu on cu.id = t.create_user_id
        LEFT JOIN t_goods g on t.stock_goods_id = g.id
        WHERE t.id = #{id}
    </select>

    <select id="getOrderExtInfo" parameterType="string" resultType="map">
        SELECT currency,pricing_type as pricingType,goods_price as goodsPrice,material_number as
        materialNumber,theme_title as po
        FROM t_order_ext et
        LEFT JOIN t_order r on et.master_id = r.id
        LEFT JOIN t_theme t on t.id = r.theme_id
        WHERE et.master_id = #{orderId}
    </select>

    <select id="selectStockPackageCategory" resultType="com.bc.app.server.entity.StockApplicationPackageCategory">
        SELECT
        id
        FROM  t_stock_application_package_category
        WHERE   stock_application_id =#{stockApplicationId}
    </select>

    <select id="selectStockApplicationPackage" resultType="com.bc.app.server.entity.StockApplicationPackage">
        SELECT
        id
        FROM t_stock_application_package
        WHERE   stock_application_id =#{stockApplicationId}
    </select>
    <select id="getStockByGoodsId" resultType="com.bc.app.server.entity.StockApplicationInRecord">
         SELECT sum(r.residual_number) residualNumber  ,
        r.goods_id as goodsId,
        r.goods_spec_id as  goodsSpecId,
        c.x,
        c.y
        from t_stock_application_in_record r
        left JOIN t_stock_application s on r.stock_application_id = s.id
        left join t_goods_spec c on c.id = r.goods_spec_id and c.goods_id = r.goods_id
        where r.goods_id = #{goodsId}
        and s.status = '1'
        group by goods_spec_id
    </select>
    <select id="getStockDetailByGoodsId" parameterType="string" resultMap="stockApplicationInRecordDtMap">
        SELECT r.*,w.id as w_id,w.name as w_name,w.contact_name,w.contact_phone,
        w.province,w.city,w.area,w.address,w.remark,
        s.biz_type,c.x,c.y,
        outt.goods_id out_goods_id,
        outt.stock_application_id out_stock_application_id,
        outt.id as out_id,
        outt.in_record_id out_in_record_id,
        outt.count out_count,
        outt.price out_price,
        outt.goods_spec_id out_goods_spec_id,
        ot.create_time as ot_create_time,
        ot.remark ot_remark,
        s.remark s_remark
        from t_stock_application_in_record r
        LEFT JOIN t_stock_application_out_record outt on outt.in_record_id = r.id and outt.id is not null
        LEFT JOIN t_stock_application ot on ot.id = outt.stock_application_id
        left JOIN t_ware_house w on r.ware_house_id = w.id
        left JOIN t_stock_application s on s.id = r.stock_application_id
        left join t_goods_spec c on c.id = r.goods_spec_id
        where r.goods_id = #{goodsId} and s.status = '1'
        order by r.create_time desc
    </select>

    <insert id="insertStockPackageCategory" parameterType="stockApplicationPackageCategory">
        insert into t_stock_application_package_category
        (
        id, name,stock_application_id,
        box_num,box_count,weight_unit,gross_weight,
        net_weight,total_gross_weight,total_net_weight,
        length_unit,x,y,z,volume,
        remark,create_time,create_user_id,sort,
        gang,enterprise_id
        )
        VALUES
        (
        #{id},#{name},#{stockApplicationId},
        #{boxNum},#{boxCount},#{weightUnit},#{grossWeight},
        #{netWeight},#{totalGrossWeight},#{totalNetWeight},
        #{lengthUnit},#{x},#{y},#{z},#{volume},
        #{remark},now(),#{createUserId},#{sort},
        #{gang},#{enterpriseId}
        )
    </insert>

    <insert id="insertStockApplicationPackage" parameterType="stockApplicationPackage">
        insert into t_stock_application_package
        (
        id, name,gang,stock_application_id,
        box_num,box_count,weight_unit,gross_weight,
        net_weight,total_gross_weight,total_net_weight,
        length_unit,x,y,z,volume,
        remark,create_time,create_user_id,sort,category_id,
        enterprise_id
        )
        VALUES
        (
        #{id},#{name},#{gang},#{stockApplicationId},
        #{boxNum},#{boxCount},#{weightUnit},#{grossWeight},
        #{netWeight},#{totalGrossWeight},#{totalNetWeight},
        #{lengthUnit},#{x},#{y},#{z},#{volume},
        #{remark},now(),#{createUserId},#{sort},#{categoryId},
        #{enterpriseId}
        )
    </insert>

    <insert id="insertStockApplicationPackageRecordList" parameterType="list">
        insert into t_stock_application_package_record
        (
        id,box_id,sort,goods_id,goods_spec_id,
        count,apply_number,stock_application_id,price,currency,
        create_user_id,create_time,enterprise_id
        )
        VALUES
        <foreach collection="list" separator="," item="item">
            (
            #{item.id},#{item.boxId},#{item.sort},#{item.goodsId},#{item.goodsSpecId},
            #{item.count},#{item.applyNumber}, #{item.stockApplicationId},#{item.price},#{item.currency},
            #{item.createUserId},now(),#{item.enterpriseId}
            )
        </foreach>
    </insert>
</mapper>