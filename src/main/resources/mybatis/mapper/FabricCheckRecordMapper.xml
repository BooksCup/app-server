<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.app.server.mapper.FabricCheckRecordMapper">

    <update id="updateByid" parameterType="fabricCheckRecord">
        UPDATE t_fabric_check_record
        <trim prefix="SET" suffixOverrides=",">
            <if test='lengthAfter != null and lengthAfter != "" '>
                length_after = #{lengthAfter},
            </if>
            <if test='weightAfter != null and weightAfter != "" '>
                weight_after = #{weightAfter},
            </if>
            <if test='isDelete != null and isDelete != "" '>
                is_delete=#{isDelete},
            </if>
            <if test='widthTop != null and widthTop != "" '>
                width_top=#{widthTop},
            </if>
            <if test='widthMiddle != null and widthMiddle != "" '>
                width_middle=#{widthMiddle},
            </if>
            <if test='widthBottom != null and widthBottom != "" '>
                width_bottom=#{widthBottom},
            </if>
            modify_time = now()
        </trim>
        where id = #{id}

    </update>
    <update id="batchUpdateFabricCheckRecordByIds" parameterType="list">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update t_fabric_check_record
            <trim prefix="SET" suffixOverrides=",">
                <if test='item.lengthAfter != null and item.lengthAfter != "" '>
                    length_after = #{item.lengthAfter},
                </if>
                <if test='item.weightAfter != null and item.weightAfter != "" '>
                    weight_after = #{item.weightAfter},
                </if>
                <if test='item.lengthBefore != null and item.lengthBefore != "" '>
                    length_before = #{item.lengthBefore},
                </if>
                <if test='item.weightBefore != null and item.weightBefore != "" '>
                    weight_before = #{item.weightBefore},
                </if>
                modify_time = now()
            </trim>
            where id = #{item.id}
        </foreach>

    </update>

    <select id="selectById" resultType="fabricCheckRecord" parameterType="com.bc.app.server.entity.FabricCheckRecord">
        SELECT
        id,
        sno,
        check_lot_info_id as checkLotInfoId ,
        length_before as lengthBefore ,
        length_after as lengthAfter,
        length_unit as lengthUnit,
        weight_before as weightBefore,
        weight_after as weightAfter,
        weight_unit as weightUnit,
        delivery_date as deliveryDate,
        create_time as createTime,
        width_middle as widthMiddle,
        width_bottom as widthBottom,
        width_top as widthTop,
        modify_time as modifyTime
        FROM
        `t_fabric_check_record`
        WHERE is_delete='0'
        <if test='id != null and id != "" '>
            and id=#{id}
        </if>
    </select>

    <select id="getByWarehouseId" resultType="fabricCheckRecord"
            parameterType="com.bc.app.server.entity.FabricCheckRecord">
        SELECT
        id,
        sno,
        check_lot_info_id as checkLotInfoId ,
        length_before as lengthBefore ,
        length_after as lengthAfter,
        length_unit as lengthUnit,
        weight_before as weightBefore,
        weight_after as weightAfter,
        weight_unit as weightUnit,
        delivery_date as deliveryDate,
        create_time as createTime
        FROM
        `t_fabric_check_record`
        WHERE is_delete=0
        <if test='checkLotInfoId != null checkLotInfoId != "" '>
            and check_lot_info_id=#{checkLotInfoId}
        </if>
        ORDER BY CAST(sno AS UNSIGNED)
    </select>


    <select id="getCountData" resultType="com.bc.app.server.vo.fabricqcrecordcontrollervo.GetByWarehouseIdVo">
        SELECT
        -- CAST(13.123 as DECIMAL(13,2))
        CAST(SUM( length_before ) as DECIMAL(13,2)) AS lengthBeforeTotal,
        CAST(SUM( length_after ) as DECIMAL(13,2)) AS lengthAfterTotal,
        CAST(SUM( weight_before ) as DECIMAL(13,2)) AS weightBeforeTotal,
        CAST(SUM( weight_after ) as DECIMAL(13,2)) AS weightAfterTotal,
        COUNT(1) as totalNum
        FROM
        `t_fabric_check_record`
        WHERE
        is_delete = 0
        <if test='checkLotInfoId != null and checkLotInfoId != "" '>
            and check_lot_info_id=#{checkLotInfoId}
        </if>
    </select>

    <select id="getFabricQcRecordGroupDeliveryDates"
            resultType="com.bc.app.server.vo.fabricqcrecordcontrollervo.FabricQcRecordAllByCheckLIIdVo">
        select
         delivery_date as  deliveryDate,
         count(delivery_date) as totalnum,
          CAST(SUM( length_before ) as DECIMAL(13,2)) AS lengthBeforeTotal,
        CAST(SUM( length_after ) as DECIMAL(13,2)) AS lengthAfterTotal,
        CAST(SUM( weight_before ) as DECIMAL(13,2)) AS weightBeforeTotal,
        CAST(SUM( weight_after ) as DECIMAL(13,2)) AS weightAfterTotal
        from `t_fabric_check_record`
        where is_delete='0' and  check_lot_info_id=#{checkLotInfoId} group by delivery_date
    </select>

    <select id="getFabricQcRecordAllByCheckLIId" parameterType="map"
            resultType="com.bc.app.server.entity.FabricCheckRecord">
        SELECT
        id,
        sno,
        check_lot_info_id as checkLotInfoId ,
        length_before as lengthBefore ,
        length_after as lengthAfter,
        length_unit as lengthUnit,
        weight_before as weightBefore,
        weight_after as weightAfter,
        weight_unit as weightUnit,
        delivery_date as deliveryDate,
        create_time as createTime,
        modify_time as modifyTime
        from
        `t_fabric_check_record`
        where is_delete='0'
        <if test="checkLotInfoId != null and checkLotInfoId != ''">
            and check_lot_info_id=#{checkLotInfoId}
        </if>
        <if test="deliveryDate !=null and deliveryDate != ''">
            and delivery_date=#{deliveryDate}
        </if>
        ORDER BY   sno
    </select>


    <insert id="addRecord" parameterType="com.bc.app.server.entity.FabricCheckRecord">
        insert into t_fabric_check_record
        (
        id,
        sno,
        check_lot_info_id ,
        length_before ,
        length_after,
        length_unit,
        weight_before,
        weight_after ,
        weight_unit ,
        delivery_date,
        create_time
        )
        values
            (
            #{fabricCheckRecord.id},
            #{fabricCheckRecord.sno},
            #{fabricCheckRecord.checkLotInfoId},
            #{fabricCheckRecord.lengthBefore},
            #{fabricCheckRecord.lengthAfter},
            #{fabricCheckRecord.lengthUnit},
            #{fabricCheckRecord.weightBefore},
            #{fabricCheckRecord.weightAfter},
            #{fabricCheckRecord.weightUnit},
            #{fabricCheckRecord.deliveryDate},
            now()
            )
    </insert>


    <insert id="insertFabricQcRecords" parameterType="com.bc.app.server.entity.FabricCheckRecord">
        insert into t_fabric_check_record
        (
        id,
        sno,
        check_lot_info_id ,
        length_before ,
        length_after,
        length_unit,
        weight_before,
        weight_after ,
        weight_unit ,
        delivery_date,
        create_time,
        modify_time
        )
        values
        <foreach collection="list" item="fabricCheckRecord" separator=",">
            (
            #{fabricCheckRecord.id},
            #{fabricCheckRecord.sno},
            #{fabricCheckRecord.checkLotInfoId},
            #{fabricCheckRecord.lengthBefore},
            #{fabricCheckRecord.lengthAfter},
            #{fabricCheckRecord.lengthUnit},
            #{fabricCheckRecord.weightBefore},
            #{fabricCheckRecord.weightAfter},
            #{fabricCheckRecord.weightUnit},
            #{fabricCheckRecord.deliveryDate},
            now(),
            now()
            )
        </foreach>
    </insert>
    <insert id="insert" parameterType="com.bc.app.server.entity.FabricCheckRecord">
        insert into t_fabric_check_record
        (
        id,
        sno,
        check_lot_info_id ,
        length_before ,
        length_after,
        length_unit,
        weight_before,
        weight_after ,
        weight_unit ,
        delivery_date,
        create_time,
        modify_time
        )
        values
            (
            #{id},
            #{sno},
            #{checkLotInfoId},
            #{lengthBefore},
            #{lengthAfter},
            #{lengthUnit},
            #{weightBefore},
            #{weightAfter},
            #{weightUnit},
            #{deliveryDate},
            now(),
            now()
            )
    </insert>

    <delete id="deleteByWarehouseId" parameterType="string">
        update t_fabric_check_record set is_delete = 1  where  warehouse_id= #{id}
    </delete>
    <delete id="deleteByCheckLotInfoId" parameterType="string">
        update t_fabric_check_record set is_delete = 1  where  check_lot_info_id= #{checkLotInfoId}
    </delete>

</mapper>